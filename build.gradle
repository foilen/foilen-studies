plugins {
    id "com.github.ben-manes.versions" version "0.44.0"

    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'

    id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'com.foilen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudAzureVersion', "4.5.0")
}

dependencies {
    implementation 'com.foilen:jl-smalltools-mongodb:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-data-mongodb'

    // Database
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Login
    implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Text to speech
    implementation platform('com.google.cloud:libraries-bom:26.2.0')
    implementation 'com.google.cloud:google-cloud-texttospeech'
    implementation 'com.google.auth:google-auth-library-oauth2-http'

    // Test
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
    }
}

springBoot {
    mainClass = 'com.foilen.studies.StudiesApplication'
}

tasks.named('test') {
    useJUnitPlatform()
}

// NodeJS
node {
    download = true
    nodeProjectDir = file("${project.projectDir}/src/main/ui") as Directory
}

task copyNodeBuildFiles(type: Copy) {
    from "${project.projectDir}/src/main/ui/build"
    into "${project.projectDir}/build/resources/main/static"
}

// npmInstall -> npm_run_build -> copyNodeBuildFiles
tasks.bootJar.dependsOn copyNodeBuildFiles
tasks.assemble.dependsOn copyNodeBuildFiles
tasks.copyNodeBuildFiles.dependsOn tasks.npm_run_build
tasks.npm_run_build.dependsOn tasks.npmInstall

// npm_run_test
//task npmRunTest(type: NpmTask) {
//    args = ['run', 'test:ci']
//}
//tasks.test.dependsOn tasks.npmRunTest
//tasks.npmRunTest.dependsOn tasks.npmInstall

// Start webui
task npmRunWatch(type: NpmTask) {
    args = ['run', 'watch']
}
